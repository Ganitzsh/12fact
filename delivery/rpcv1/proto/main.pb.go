// Code generated by protoc-gen-go. DO NOT EDIT.
// source: main.proto

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	main.proto

It has these top-level messages:
	HealthcheckRequest
	HealthcheckStatus
	Image
	TransformedImage
	TransformImageRequest
	RotateImageRequest
	BlurImageRequest
	CropImageRequest
	NewTokenRequest
	DeleteTokenRequest
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/any"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

type TransformationType int32

const (
	TransformationType_ROTATE TransformationType = 0
	TransformationType_CROP   TransformationType = 1
	TransformationType_BLUR   TransformationType = 2
)

var TransformationType_name = map[int32]string{
	0: "ROTATE",
	1: "CROP",
	2: "BLUR",
}
var TransformationType_value = map[string]int32{
	"ROTATE": 0,
	"CROP":   1,
	"BLUR":   2,
}

func (x TransformationType) String() string {
	return proto1.EnumName(TransformationType_name, int32(x))
}
func (TransformationType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type HealthcheckRequest struct {
}

func (m *HealthcheckRequest) Reset()                    { *m = HealthcheckRequest{} }
func (m *HealthcheckRequest) String() string            { return proto1.CompactTextString(m) }
func (*HealthcheckRequest) ProtoMessage()               {}
func (*HealthcheckRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type HealthcheckStatus struct {
	Store bool `protobuf:"varint,1,opt,name=store" json:"store,omitempty"`
}

func (m *HealthcheckStatus) Reset()                    { *m = HealthcheckStatus{} }
func (m *HealthcheckStatus) String() string            { return proto1.CompactTextString(m) }
func (*HealthcheckStatus) ProtoMessage()               {}
func (*HealthcheckStatus) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *HealthcheckStatus) GetStore() bool {
	if m != nil {
		return m.Store
	}
	return false
}

type Image struct {
	Size   int64  `protobuf:"varint,1,opt,name=size" json:"size,omitempty"`
	Format string `protobuf:"bytes,2,opt,name=format" json:"format,omitempty"`
	File   []byte `protobuf:"bytes,3,opt,name=file,proto3" json:"file,omitempty"`
}

func (m *Image) Reset()                    { *m = Image{} }
func (m *Image) String() string            { return proto1.CompactTextString(m) }
func (*Image) ProtoMessage()               {}
func (*Image) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Image) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *Image) GetFormat() string {
	if m != nil {
		return m.Format
	}
	return ""
}

func (m *Image) GetFile() []byte {
	if m != nil {
		return m.File
	}
	return nil
}

type TransformedImage struct {
	File []byte `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
}

func (m *TransformedImage) Reset()                    { *m = TransformedImage{} }
func (m *TransformedImage) String() string            { return proto1.CompactTextString(m) }
func (*TransformedImage) ProtoMessage()               {}
func (*TransformedImage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *TransformedImage) GetFile() []byte {
	if m != nil {
		return m.File
	}
	return nil
}

type TransformImageRequest struct {
	Type  TransformationType   `protobuf:"varint,1,opt,name=type,enum=proto.TransformationType" json:"type,omitempty"`
	Data  *google_protobuf.Any `protobuf:"bytes,2,opt,name=data" json:"data,omitempty"`
	Image *Image               `protobuf:"bytes,3,opt,name=image" json:"image,omitempty"`
}

func (m *TransformImageRequest) Reset()                    { *m = TransformImageRequest{} }
func (m *TransformImageRequest) String() string            { return proto1.CompactTextString(m) }
func (*TransformImageRequest) ProtoMessage()               {}
func (*TransformImageRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *TransformImageRequest) GetType() TransformationType {
	if m != nil {
		return m.Type
	}
	return TransformationType_ROTATE
}

func (m *TransformImageRequest) GetData() *google_protobuf.Any {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *TransformImageRequest) GetImage() *Image {
	if m != nil {
		return m.Image
	}
	return nil
}

type RotateImageRequest struct {
	Angle     float32 `protobuf:"fixed32,1,opt,name=angle" json:"angle,omitempty"`
	ClockWise bool    `protobuf:"varint,2,opt,name=clockWise" json:"clockWise,omitempty"`
}

func (m *RotateImageRequest) Reset()                    { *m = RotateImageRequest{} }
func (m *RotateImageRequest) String() string            { return proto1.CompactTextString(m) }
func (*RotateImageRequest) ProtoMessage()               {}
func (*RotateImageRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *RotateImageRequest) GetAngle() float32 {
	if m != nil {
		return m.Angle
	}
	return 0
}

func (m *RotateImageRequest) GetClockWise() bool {
	if m != nil {
		return m.ClockWise
	}
	return false
}

type BlurImageRequest struct {
	Sigma float32 `protobuf:"fixed32,1,opt,name=sigma" json:"sigma,omitempty"`
}

func (m *BlurImageRequest) Reset()                    { *m = BlurImageRequest{} }
func (m *BlurImageRequest) String() string            { return proto1.CompactTextString(m) }
func (*BlurImageRequest) ProtoMessage()               {}
func (*BlurImageRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *BlurImageRequest) GetSigma() float32 {
	if m != nil {
		return m.Sigma
	}
	return 0
}

type CropImageRequest struct {
	TopLeftX int32 `protobuf:"varint,1,opt,name=topLeftX" json:"topLeftX,omitempty"`
	TopLeftY int32 `protobuf:"varint,2,opt,name=topLeftY" json:"topLeftY,omitempty"`
	Width    int32 `protobuf:"varint,3,opt,name=width" json:"width,omitempty"`
	Height   int32 `protobuf:"varint,4,opt,name=height" json:"height,omitempty"`
}

func (m *CropImageRequest) Reset()                    { *m = CropImageRequest{} }
func (m *CropImageRequest) String() string            { return proto1.CompactTextString(m) }
func (*CropImageRequest) ProtoMessage()               {}
func (*CropImageRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *CropImageRequest) GetTopLeftX() int32 {
	if m != nil {
		return m.TopLeftX
	}
	return 0
}

func (m *CropImageRequest) GetTopLeftY() int32 {
	if m != nil {
		return m.TopLeftY
	}
	return 0
}

func (m *CropImageRequest) GetWidth() int32 {
	if m != nil {
		return m.Width
	}
	return 0
}

func (m *CropImageRequest) GetHeight() int32 {
	if m != nil {
		return m.Height
	}
	return 0
}

type NewTokenRequest struct {
	Label string `protobuf:"bytes,1,opt,name=label" json:"label,omitempty"`
}

func (m *NewTokenRequest) Reset()                    { *m = NewTokenRequest{} }
func (m *NewTokenRequest) String() string            { return proto1.CompactTextString(m) }
func (*NewTokenRequest) ProtoMessage()               {}
func (*NewTokenRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *NewTokenRequest) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

type DeleteTokenRequest struct {
	Label string `protobuf:"bytes,1,opt,name=label" json:"label,omitempty"`
}

func (m *DeleteTokenRequest) Reset()                    { *m = DeleteTokenRequest{} }
func (m *DeleteTokenRequest) String() string            { return proto1.CompactTextString(m) }
func (*DeleteTokenRequest) ProtoMessage()               {}
func (*DeleteTokenRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *DeleteTokenRequest) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func init() {
	proto1.RegisterType((*HealthcheckRequest)(nil), "proto.HealthcheckRequest")
	proto1.RegisterType((*HealthcheckStatus)(nil), "proto.HealthcheckStatus")
	proto1.RegisterType((*Image)(nil), "proto.Image")
	proto1.RegisterType((*TransformedImage)(nil), "proto.TransformedImage")
	proto1.RegisterType((*TransformImageRequest)(nil), "proto.TransformImageRequest")
	proto1.RegisterType((*RotateImageRequest)(nil), "proto.RotateImageRequest")
	proto1.RegisterType((*BlurImageRequest)(nil), "proto.BlurImageRequest")
	proto1.RegisterType((*CropImageRequest)(nil), "proto.CropImageRequest")
	proto1.RegisterType((*NewTokenRequest)(nil), "proto.NewTokenRequest")
	proto1.RegisterType((*DeleteTokenRequest)(nil), "proto.DeleteTokenRequest")
	proto1.RegisterEnum("proto.TransformationType", TransformationType_name, TransformationType_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for IMage service

type IMageClient interface {
	TransformImage(ctx context.Context, opts ...grpc.CallOption) (IMage_TransformImageClient, error)
	Healthcheck(ctx context.Context, in *HealthcheckRequest, opts ...grpc.CallOption) (*HealthcheckStatus, error)
}

type iMageClient struct {
	cc *grpc.ClientConn
}

func NewIMageClient(cc *grpc.ClientConn) IMageClient {
	return &iMageClient{cc}
}

func (c *iMageClient) TransformImage(ctx context.Context, opts ...grpc.CallOption) (IMage_TransformImageClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_IMage_serviceDesc.Streams[0], c.cc, "/proto.IMage/TransformImage", opts...)
	if err != nil {
		return nil, err
	}
	x := &iMageTransformImageClient{stream}
	return x, nil
}

type IMage_TransformImageClient interface {
	Send(*TransformImageRequest) error
	Recv() (*TransformedImage, error)
	grpc.ClientStream
}

type iMageTransformImageClient struct {
	grpc.ClientStream
}

func (x *iMageTransformImageClient) Send(m *TransformImageRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *iMageTransformImageClient) Recv() (*TransformedImage, error) {
	m := new(TransformedImage)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *iMageClient) Healthcheck(ctx context.Context, in *HealthcheckRequest, opts ...grpc.CallOption) (*HealthcheckStatus, error) {
	out := new(HealthcheckStatus)
	err := grpc.Invoke(ctx, "/proto.IMage/Healthcheck", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for IMage service

type IMageServer interface {
	TransformImage(IMage_TransformImageServer) error
	Healthcheck(context.Context, *HealthcheckRequest) (*HealthcheckStatus, error)
}

func RegisterIMageServer(s *grpc.Server, srv IMageServer) {
	s.RegisterService(&_IMage_serviceDesc, srv)
}

func _IMage_TransformImage_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(IMageServer).TransformImage(&iMageTransformImageServer{stream})
}

type IMage_TransformImageServer interface {
	Send(*TransformedImage) error
	Recv() (*TransformImageRequest, error)
	grpc.ServerStream
}

type iMageTransformImageServer struct {
	grpc.ServerStream
}

func (x *iMageTransformImageServer) Send(m *TransformedImage) error {
	return x.ServerStream.SendMsg(m)
}

func (x *iMageTransformImageServer) Recv() (*TransformImageRequest, error) {
	m := new(TransformImageRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _IMage_Healthcheck_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HealthcheckRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IMageServer).Healthcheck(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.IMage/Healthcheck",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IMageServer).Healthcheck(ctx, req.(*HealthcheckRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _IMage_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.IMage",
	HandlerType: (*IMageServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Healthcheck",
			Handler:    _IMage_Healthcheck_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "TransformImage",
			Handler:       _IMage_TransformImage_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "main.proto",
}

func init() { proto1.RegisterFile("main.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 483 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x93, 0xd1, 0x6e, 0xd3, 0x30,
	0x14, 0x86, 0x71, 0xd7, 0x54, 0xed, 0xe9, 0x34, 0x82, 0x55, 0x20, 0xab, 0x76, 0x51, 0xf9, 0x02,
	0xc2, 0x24, 0x32, 0x54, 0x78, 0x81, 0x75, 0x20, 0x36, 0x31, 0x18, 0x32, 0x41, 0xb0, 0x4b, 0xb7,
	0x3d, 0x4d, 0xac, 0xa6, 0x71, 0x48, 0x5c, 0x8d, 0xf2, 0x1c, 0x5c, 0xf0, 0xb8, 0x28, 0x76, 0xda,
	0xa5, 0xed, 0xc5, 0xae, 0xe2, 0xdf, 0xff, 0xa7, 0xf3, 0x1f, 0x3b, 0xc7, 0x00, 0x0b, 0x21, 0xd3,
	0x20, 0xcb, 0x95, 0x56, 0xd4, 0x31, 0x9f, 0xfe, 0x71, 0xa4, 0x54, 0x94, 0xe0, 0x99, 0x51, 0xe3,
	0xe5, 0xec, 0x4c, 0xa4, 0x2b, 0x4b, 0xb0, 0x1e, 0xd0, 0x4b, 0x14, 0x89, 0x8e, 0x27, 0x31, 0x4e,
	0xe6, 0x1c, 0x7f, 0x2d, 0xb1, 0xd0, 0xec, 0x15, 0x3c, 0xa9, 0xed, 0x7e, 0xd3, 0x42, 0x2f, 0x0b,
	0xda, 0x03, 0xa7, 0xd0, 0x2a, 0x47, 0x8f, 0x0c, 0x88, 0xdf, 0xe6, 0x56, 0xb0, 0x8f, 0xe0, 0x5c,
	0x2d, 0x44, 0x84, 0x94, 0x42, 0xb3, 0x90, 0x7f, 0xac, 0x7b, 0xc0, 0xcd, 0x9a, 0x3e, 0x83, 0xd6,
	0x4c, 0xe5, 0x0b, 0xa1, 0xbd, 0xc6, 0x80, 0xf8, 0x1d, 0x5e, 0xa9, 0x92, 0x9d, 0xc9, 0x04, 0xbd,
	0x83, 0x01, 0xf1, 0x0f, 0xb9, 0x59, 0xb3, 0x17, 0xe0, 0x86, 0xb9, 0x48, 0x8b, 0x12, 0xc1, 0xe9,
	0xa6, 0xa6, 0xe1, 0x48, 0x8d, 0xfb, 0x4b, 0xe0, 0xe9, 0x06, 0x34, 0x58, 0xd5, 0x35, 0x7d, 0x0d,
	0x4d, 0xbd, 0xca, 0x2c, 0x7d, 0x34, 0x3c, 0xb6, 0x27, 0x0c, 0x36, 0xac, 0xd0, 0x52, 0xa5, 0xe1,
	0x2a, 0x43, 0x6e, 0x30, 0xea, 0x43, 0x73, 0x2a, 0xb4, 0x30, 0xad, 0x75, 0x87, 0xbd, 0xc0, 0x5e,
	0x52, 0xb0, 0xbe, 0xa4, 0xe0, 0x3c, 0x5d, 0x71, 0x43, 0x50, 0x06, 0x8e, 0x2c, 0x83, 0x4c, 0xbf,
	0xdd, 0xe1, 0x61, 0x55, 0xd9, 0x86, 0x5b, 0x8b, 0x5d, 0x02, 0xe5, 0x4a, 0x0b, 0x8d, 0x5b, 0x2d,
	0xf5, 0xc0, 0x11, 0x69, 0x54, 0x9d, 0xa0, 0xc1, 0xad, 0xa0, 0x27, 0xd0, 0x99, 0x24, 0x6a, 0x32,
	0xff, 0x21, 0x0b, 0x34, 0xf1, 0x6d, 0x7e, 0xbf, 0xc1, 0x7c, 0x70, 0x47, 0xc9, 0x32, 0xdf, 0xad,
	0x53, 0xc8, 0x68, 0x21, 0xd6, 0x75, 0x8c, 0x60, 0xbf, 0xc1, 0xbd, 0xc8, 0x55, 0xb6, 0x45, 0xf6,
	0xa1, 0xad, 0x55, 0x76, 0x8d, 0x33, 0xfd, 0xd3, 0xc0, 0x0e, 0xdf, 0xe8, 0x9a, 0x77, 0x6b, 0x62,
	0xef, 0xbd, 0xdb, 0x32, 0xe1, 0x4e, 0x4e, 0x75, 0x6c, 0xce, 0xe8, 0x70, 0x2b, 0xca, 0x1f, 0x18,
	0xa3, 0x8c, 0x62, 0xed, 0x35, 0xcd, 0x76, 0xa5, 0xd8, 0x4b, 0x78, 0xfc, 0x05, 0xef, 0x42, 0x35,
	0xc7, 0xb4, 0xd6, 0x62, 0x22, 0xc6, 0x98, 0x98, 0xd4, 0x0e, 0xb7, 0x82, 0x9d, 0x02, 0x7d, 0x8f,
	0x09, 0x6a, 0x7c, 0x98, 0x3d, 0x7d, 0x07, 0x74, 0xff, 0x67, 0x51, 0x80, 0x16, 0xbf, 0x09, 0xcf,
	0xc3, 0x0f, 0xee, 0x23, 0xda, 0x86, 0xe6, 0x05, 0xbf, 0xf9, 0xea, 0x92, 0x72, 0x35, 0xba, 0xfe,
	0xce, 0xdd, 0xc6, 0xf0, 0x1f, 0x01, 0xe7, 0xea, 0x73, 0x39, 0x2d, 0x9f, 0xe0, 0x68, 0x7b, 0x30,
	0xe8, 0xc9, 0xee, 0x0c, 0xd4, 0xaf, 0xaa, 0xff, 0x7c, 0xd7, 0xad, 0xc6, 0xce, 0x27, 0x6f, 0x08,
	0x1d, 0x41, 0xb7, 0xf6, 0x04, 0xe8, 0x7a, 0x9a, 0xf6, 0x1f, 0x4b, 0xdf, 0xdb, 0xb7, 0xec, 0x8b,
	0x19, 0xb7, 0x8c, 0xf1, 0xf6, 0x7f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x85, 0xf5, 0xbe, 0x28, 0x93,
	0x03, 0x00, 0x00,
}
